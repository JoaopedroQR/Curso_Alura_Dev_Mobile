Geração de uma chave SSH:
        A geração da chave é feita via terminal, com o comando ssh-keygen -t ed25519 -C "SEU EMAIL AQUI"
    Generating public/private ed25519 key pair.
    Enter file in which to save the key (/home/rodrigo/.ssh/id_ed25519):
        Essa primeira pergunta é para indicarmos o diretório em nosso computador no qual a chave será salva
        recomendado é apenas apertar a tecla enter no teclado para que a chave seja salva no diretório padrão,
        pois assim o Git consegue encontrar essa chave automaticamente sempre que executarmos o comando git push.
    Enter passphrase (enter for no passphrase):
        indicarmos se desejamos adicionar uma senha à chave SSH que será gerada. 
        Ao não digitar nada e apenas apertar a tecla enter, a chave será gerada sem a proteção de uma senha.
Cadastrando a chave SSH no GitHub:
        Acesse a página de chaves SSH de sua conta no GitHub e clique no botão New SSH key ou
        Nova chave SSH para realizar o cadastro da chave:

Adicionar um repositório remoto:
    git remote add apelido url
        'apelido': Este é um nome que você atribui ao repositório remoto.
        normalmente 'origin'.
 Listar os repositórios remotos:
    git remote -v
        Essa lista é útil para verificar se os repositórios remotos estão
        configurados corretamente. Obs: Vai aparecer duplicado mesmo, pois
        o Git separa a url de envio de commits (push) da url de baixar commits (fetch).
Remover um repositório remoto:
    git remote remove origin
Alterar a URL de um repositório remoto:
    git remote set-url origin https://github.com/seu-usuario/seu-repositorio.git
Alterar o apelido de um repositório remoto:
    git remote rename origin novo-origin

Clonar um projeto:
    - git clone url_do_projetos

mostrar o estado do projeto:
    - git status

Alterando projetos e mandando commits:
    - git commit - m "mensagem"
    O Git oferece a possibilidade de adicionar mais de um autor a um commit.
    Para isso, após escrever a mensagem do commit, pulamos duas linhas e usamos
    a palavra-chave Co-authored-by eguido do nome e e-mail associado ao GitHub (entre < >)
    de cada pessoa colaboradora.
    $ git commit -m "Adicionar nova funcionalidade.
    >
    >
    Co-authored-by: NOME <nome@email.com>
    Co-authored-by: OUTRO-NOME <outro@email.com>"

historico dos commits feitos no projeto:
    - git log

Letras e seus significados:
M - Modified (Modificado) não foi salvo no github ainda
U - Untracked (não rasterado) arquivo nao existia antigamente no projeto.

Mandando arquivos de outro pc para o repositorio remoto
    comando clone ja faz a ligação automaticamente do repositorio remoto e repositorio local
    git remote -> mostra os repositorios remotos conectados.
    git push origin main -> mandar os arquivos para o repositorio
             nome    branch

Adicionando colaboradores:
    settings -> colaboradores -> add people -> passar username da pessoa
    convite pendente -> view invite -> accept invite.

Puxar todos os arquivos do repositorio remoto:
    git pull origin main
    git pull origin main --allow-unrelated-histories

https://www.alura.com.br/artigos/nova-exigencia-do-git-de-autenticacao-por-token-o-que-e-o-que-devo-fazer